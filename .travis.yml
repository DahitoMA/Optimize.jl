language: julia

os:
  - linux
  - osx

julia:
  - release

notifications:
  email: false

before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    wget --no-check-certificate http://www.cmake.org/files/v3.3/cmake-3.3.2-Darwin-x86_64.tar.gz;
    tar -xzf cmake-3.3.2-Darwin-x86_64.tar.gz;
    export PATH=`pwd`/cmake-3.3.2-Darwin-x86_64/CMake.app/Contents/bin:$PATH; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    wget --no-check-certificate http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz;
    tar -xzf cmake-3.3.2-Linux-x86_64.tar.gz;
    sudo cp -fR cmake-3.3.2-Linux-x86_64/* /usr;
    export PATH=`pwd`/cmake-3.3.2-Linux-x86_64/bin:$PATH; fi
  - which cmake
  - cmake --version
  - julia -e 'Pkg.clone("https://github.com/JuliaSmoothOptimizers/NLPModels.jl.git")'
  - julia -e 'Pkg.checkout("NLPModels", "develop")'
  - julia -e 'Pkg.clone("https://github.com/JuliaSmoothOptimizers/OptimizationProblems.jl.git")'
  - julia -e 'Pkg.add("DistributedArrays"); Pkg.build("DistributedArrays")'
  - julia -e 'Pkg.clone("https://github.com/JuliaSmoothOptimizers/Krylov.jl.git")'
  - julia -e 'Pkg.checkout("Krylov", "develop")'
  - julia -e 'Pkg.clone("https://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git")'
  - julia -e 'Pkg.checkout("LinearOperators")'
  - julia -e 'Pkg.clone("https://github.com/JuliaSmoothOptimizers/AmplNLReader.jl.git")'
  - julia -e 'Pkg.checkout("AmplNLReader", "develop")'
  - julia -e 'Pkg.build("AmplNLReader")'
  - julia -e 'Pkg.clone("https://github.com/JuliaSmoothOptimizers/Profiles.jl.git")'

script:
  - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
  - julia -e 'Pkg.clone(pwd()); Pkg.build("Optimize"); Pkg.test("Optimize"; coverage=true)'

after_success:
  - julia -e 'cd(Pkg.dir("Optimize")); Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())'
